name: Deploy Compositor de Música Católica

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libsndfile1
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test imports
      run: |
        python -c "
        import streamlit as st
        import AgentCompose
        print('✅ Imports successful')
        "
    
    - name: Run basic tests
      run: |
        python test_compositor.py

  deploy-streamlit:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Streamlit Cloud
      run: |
        echo "🚀 Deploy automático para Streamlit Cloud"
        echo "✅ Streamlit Cloud detecta mudanças automaticamente"

  deploy-railway:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Railway
      run: |
        echo "🚀 Deploy automático para Railway"
        echo "✅ Railway detecta mudanças automaticamente"

  deploy-render:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Render
      run: |
        echo "🚀 Deploy automático para Render"
        echo "✅ Render detecta mudanças automaticamente"

  build-docker:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: |
        docker build -t compositor-catolico .
        echo "✅ Docker image built successfully"
    
    - name: Test Docker container
      run: |
        docker run -d -p 8501:8501 --name test-container compositor-catolico
        sleep 30
        curl -f http://localhost:8501/_stcore/health || exit 1
        docker stop test-container
        echo "✅ Docker container tested successfully"

  notify:
    needs: [test, deploy-streamlit, deploy-railway, deploy-render, build-docker]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.test.result }}" == "success" ]; then
          echo "✅ Testes passaram com sucesso"
        else
          echo "❌ Testes falharam"
        fi
        
        echo "🎵✝️ Deploy do Compositor de Música Católica concluído!"
